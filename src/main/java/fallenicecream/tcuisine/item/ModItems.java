package fallenicecream.tcuisine.item;

import fallenicecream.tcuisine.item.brewing.*;
import fallenicecream.tcuisine.item.food.*;
import fallenicecream.tcuisine.item.misc.*;
import net.fabricmc.fabric.api.registry.CompostingChanceRegistry;
import net.minecraft.util.Identifier;
import net.minecraft.util.registry.Registry;

public class ModItems {

    public static final Burger BURGER = new Burger();
    public static final BBQ_Ribs BBQ_RIBS = new BBQ_Ribs();
    public static final Potato_Chips POTATO_CHIPS = new Potato_Chips();
    public static final Ale ALE = new Ale();
    public static final Apple_Juice APPLE_JUICE = new Apple_Juice();
    public static final Bloody_Moscato BLOODY_MOSCATO = new Bloody_Moscato();
    public static final Shrimp SHRIMP = new Shrimp();
    public static final Apple_Pie APPLE_PIE = new Apple_Pie();
    public static final Apricot APRICOT = new Apricot();
    public static final Bacon BACON = new Bacon();
    public static final Banana BANANA = new Banana();
    public static final Banana_Split BANANA_SPLIT = new Banana_Split();
    public static final Blackcurrant BLACKCURRANT = new Blackcurrant();
    public static final Blood_Orange BLOOD_ORANGE = new Blood_Orange();
    public static final Cherry CHERRY = new Cherry();
    public static final Christmas_Pudding CHRISTMAS_PUDDING = new Christmas_Pudding();
    public static final Coconut COCONUT = new Coconut();
    public static final Coffee COFFEE = new Coffee();
    public static final Cooked_Shrimp COOKED_SHRIMP = new Cooked_Shrimp();
    public static final Cream_Soda CREAM_SODA = new Cream_Soda();
    public static final Dragon_Fruit DRAGON_FRUIT = new Dragon_Fruit();
    public static final Elderberry ELDERBERRY = new Elderberry();
    public static final Escargot ESCARGOT = new Escargot();
    public static final Snail SNAIL = new Snail();
    public static final Frozen_Banana_Daiquiri FROZEN_BANANA_DAIQUIRI = new Frozen_Banana_Daiquiri();
    public static final Fruit_Juice FRUIT_JUICE = new Fruit_Juice();
    public static final Fruit_Salad FRUIT_SALAD = new Fruit_Salad();
    public static final Present PRESENT = new Present();
    public static final Gingerbread_Cookie GINGERBREAD_COOKIE = new Gingerbread_Cookie();
    public static final Grapes GRAPES = new Grapes();
    public static final Grape_Juice GRAPE_JUICE = new Grape_Juice();
    public static final Grapefruit GRAPEFRUIT = new Grapefruit();
    public static final Rambutan RAMBUTAN = new Rambutan();
    public static final Buggy BUGGY = new Buggy();
    public static final Chicken_Nugget CHICKEN_NUGGET = new Chicken_Nugget();
    public static final Eggnog EGGNOG = new Eggnog();
    public static final Fried_Egg FRIED_EGG = new Fried_Egg();
    public static final Fries FRIES = new Fries();
    public static final Golden_Delight GOLDEN_DELIGHT = new Golden_Delight();
    public static final Grubby GRUBBY = new Grubby();
    public static final Sluggy SLUGGY = new Sluggy();
    public static final Grub_Soup GRUB_SOUP = new Grub_Soup();
    public static final Hotdog HOTDOG = new Hotdog();
    public static final Ice_Cream ICE_CREAM = new Ice_Cream();
    public static final Lemon LEMON = new Lemon();
    public static final Lemonade LEMONADE = new Lemonade();
    public static final Lobster LOBSTER = new Lobster();
    public static final Cooked_Lobster COOKED_LOBSTER = new Cooked_Lobster();
    public static final Mango MANGO = new Mango();
    public static final Marshmallow MARSHMALLOW = new Marshmallow();
    public static final Milkshake MILKSHAKE = new Milkshake();
    public static final Nachos NACHOS = new Nachos();
    public static final Oyster OYSTER = new Oyster();
    public static final Pad_Thai PAD_THAI = new Pad_Thai();
    public static final Peach_Sangria PEACH_SANGRIA = new Peach_Sangria();
    public static final Peach PEACH = new Peach();
    public static final Pho PHO = new Pho();
    public static final Pina_Colada PINA_COLADA = new Pina_Colada();
    public static final Pineapple PINEAPPLE = new Pineapple();
    public static final Pizza PIZZA = new Pizza();
    public static final Plum PLUM = new Plum();
    public static final Prismatic_Punch PRISMATIC_PUNCH = new Prismatic_Punch();
    public static final Sake SAKE = new Sake();
    public static final Shrimp_Sandwich SHRIMP_SANDWICH = new Shrimp_Sandwich();
    public static final Shucked_Oyster SHUCKED_OYSTER = new Shucked_Oyster();
    public static final Smoothie_of_Darkness SMOOTHIE_OF_DARKNESS = new Smoothie_of_Darkness();
    public static final Spaghetti SPAGHETTI = new Spaghetti();
    public static final Starfruit STARFRUIT = new Starfruit();
    public static final Sugar_Cookie SUGAR_COOKIE = new Sugar_Cookie();
    public static final Tropical_Smoothie TROPICAL_SMOOTHIE = new Tropical_Smoothie();

    public static void registerItems() {
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "ale"), ALE);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "apple_juice"), APPLE_JUICE);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "apple_pie"), APPLE_PIE);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "apricot"), APRICOT);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "bacon"), BACON);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "banana_split"), BANANA_SPLIT);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "banana"), BANANA);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "bbq_ribs"), BBQ_RIBS);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "blackcurrant"), BLACKCURRANT);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "blood_orange"), BLOOD_ORANGE);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "bloody_moscato"), BLOODY_MOSCATO);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "buggy"), BUGGY);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "burger"), BURGER);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "cherry"), CHERRY);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "chicken_nugget"), CHICKEN_NUGGET);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "christmas_pudding"), CHRISTMAS_PUDDING);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "coconut"), COCONUT);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "coffee"), COFFEE);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "cooked_lobster"), COOKED_LOBSTER);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "cooked_shrimp"), COOKED_SHRIMP);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "cream_soda"), CREAM_SODA);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "dragon_fruit"), DRAGON_FRUIT);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "eggnog"), EGGNOG);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "elderberry"), ELDERBERRY);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "escargot"), ESCARGOT);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "fried_egg"), FRIED_EGG);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "fries"), FRIES);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "frozen_banana_daiquiri"), FROZEN_BANANA_DAIQUIRI);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "fruit_juice"), FRUIT_JUICE);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "fruit_salad"), FRUIT_SALAD);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "gingerbread_cookie"), GINGERBREAD_COOKIE);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "golden_delight"), GOLDEN_DELIGHT);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "grape_juice"), GRAPE_JUICE);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "grapes"), GRAPES);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "grapefruit"), GRAPEFRUIT);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "grub_soup"), GRUB_SOUP);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "grubby"), GRUBBY);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "hotdog"), HOTDOG);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "ice_cream"), ICE_CREAM);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "lemon"), LEMON);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "lemonade"), LEMONADE);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "lobster"), LOBSTER);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "mango"), MANGO);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "marshmallow"), MARSHMALLOW);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "milkshake"), MILKSHAKE);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "nachos"), NACHOS);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "oyster"), OYSTER);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "pad_thai"), PAD_THAI);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "peach_sangria"), PEACH_SANGRIA);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "peach"), PEACH);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "pho"), PHO);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "pina_colada"), PINA_COLADA);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "pineapple"), PINEAPPLE);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "pizza"), PIZZA);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "plum"), PLUM);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "potato_chips"), POTATO_CHIPS);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "present"), PRESENT);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "prismatic_punch"), PRISMATIC_PUNCH);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "rambutan"), RAMBUTAN);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "sake"), SAKE);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "shrimp_sandwich"), SHRIMP_SANDWICH);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "shrimp"), SHRIMP);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "shucked_oyster"), SHUCKED_OYSTER);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "sluggy"), SLUGGY);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "smoothie_of_darkness"), SMOOTHIE_OF_DARKNESS);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "snail"), SNAIL);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "spaghetti"), SPAGHETTI);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "starfruit"), STARFRUIT);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "sugar_cookie"), SUGAR_COOKIE);
        Registry.register(Registry.ITEM, new Identifier("tcuisine", "tropical_smoothie"), TROPICAL_SMOOTHIE);
    }
    public static void registerCompostableItems() {
        CompostingChanceRegistry.INSTANCE.add(Registry.ITEM.get(new Identifier("tcuisine", "buggy")), 0.3f);
        CompostingChanceRegistry.INSTANCE.add(Registry.ITEM.get(new Identifier("tcuisine", "grubby")), 0.3f);
        CompostingChanceRegistry.INSTANCE.add(Registry.ITEM.get(new Identifier("tcuisine", "sluggy")), 0.3f);
        CompostingChanceRegistry.INSTANCE.add(Registry.ITEM.get(new Identifier("tcuisine", "snail")), 0.3f);

        CompostingChanceRegistry.INSTANCE.add(Registry.ITEM.get(new Identifier("tcuisine", "rambutan")), 0.5f);
        CompostingChanceRegistry.INSTANCE.add(Registry.ITEM.get(new Identifier("tcuisine", "blackcurrant")), 0.5f);
        CompostingChanceRegistry.INSTANCE.add(Registry.ITEM.get(new Identifier("tcuisine", "cherry")), 0.5f);
        CompostingChanceRegistry.INSTANCE.add(Registry.ITEM.get(new Identifier("tcuisine", "elderberry")), 0.5f);
        CompostingChanceRegistry.INSTANCE.add(Registry.ITEM.get(new Identifier("tcuisine", "grapes")), 0.5f);

        CompostingChanceRegistry.INSTANCE.add(Registry.ITEM.get(new Identifier("tcuisine", "apricot")), 0.65f);
        CompostingChanceRegistry.INSTANCE.add(Registry.ITEM.get(new Identifier("tcuisine", "banana")), 0.65f);
        CompostingChanceRegistry.INSTANCE.add(Registry.ITEM.get(new Identifier("tcuisine", "blood_orange")), 0.65f);
        CompostingChanceRegistry.INSTANCE.add(Registry.ITEM.get(new Identifier("tcuisine", "coconut")), 0.65f);
        CompostingChanceRegistry.INSTANCE.add(Registry.ITEM.get(new Identifier("tcuisine", "dragon_fruit")), 0.65f);
        CompostingChanceRegistry.INSTANCE.add(Registry.ITEM.get(new Identifier("tcuisine", "grapefruit")), 0.65f);
        CompostingChanceRegistry.INSTANCE.add(Registry.ITEM.get(new Identifier("tcuisine", "lemon")), 0.65f);
        CompostingChanceRegistry.INSTANCE.add(Registry.ITEM.get(new Identifier("tcuisine", "mango")), 0.65f);
        CompostingChanceRegistry.INSTANCE.add(Registry.ITEM.get(new Identifier("tcuisine", "peach")), 0.65f);
        CompostingChanceRegistry.INSTANCE.add(Registry.ITEM.get(new Identifier("tcuisine", "pineapple")), 0.65f);
        CompostingChanceRegistry.INSTANCE.add(Registry.ITEM.get(new Identifier("tcuisine", "plum")), 0.65f);
        CompostingChanceRegistry.INSTANCE.add(Registry.ITEM.get(new Identifier("tcuisine", "starfruit")), 0.65f);

        CompostingChanceRegistry.INSTANCE.add(Registry.ITEM.get(new Identifier("tcuisine", "fries")), 0.85f);
        CompostingChanceRegistry.INSTANCE.add(Registry.ITEM.get(new Identifier("tcuisine", "gingerbread_cookie")), 0.85f);
        CompostingChanceRegistry.INSTANCE.add(Registry.ITEM.get(new Identifier("tcuisine", "marshmallow")), 0.85f);
        CompostingChanceRegistry.INSTANCE.add(Registry.ITEM.get(new Identifier("tcuisine", "pizza")), 0.85f);
        CompostingChanceRegistry.INSTANCE.add(Registry.ITEM.get(new Identifier("tcuisine", "potato_chips")), 0.85f);
        CompostingChanceRegistry.INSTANCE.add(Registry.ITEM.get(new Identifier("tcuisine", "sugar_cookie")), 0.85f);
        CompostingChanceRegistry.INSTANCE.add(Registry.ITEM.get(new Identifier("tcuisine", "escargot")), 0.85f);

        CompostingChanceRegistry.INSTANCE.add(Registry.ITEM.get(new Identifier("tcuisine", "spaghetti")), 1f);
        CompostingChanceRegistry.INSTANCE.add(Registry.ITEM.get(new Identifier("tcuisine", "apple_pie")), 1f);
        CompostingChanceRegistry.INSTANCE.add(Registry.ITEM.get(new Identifier("tcuisine", "christmas_pudding")), 1f);
    }
}
